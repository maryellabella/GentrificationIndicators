---
title: "Untitled"
format: html
---

```{python}
import pandas as pd
import altair as alt
```

```{python}
import os

#path = r'/Users/maryell/Desktop/problem-set-4-maryell-sarah/'
path = r'/Users/sarahkim/Documents/Coding/'
```

```{python}
assessed_value = 'Assessed_Value.csv'
absolute_path_av = os.path.join(path, assessed_value)
av_df = pd.read_csv(absolute_path_av)
```

```{python}
parcel_proximity_transpo = 'Assessor_-_Parcel_Proximity_20241121(transpo).csv'
absolute_path_transpo = os.path.join(path, parcel_proximity_transpo)
transpo_df = pd.read_csv(absolute_path_transpo)
```

```{python}
parcel_proximity_fc = 'Assessor_-_Parcel_Proximity_20241121(foreclosure).csv'
absolute_path_fc = os.path.join(path, parcel_proximity_fc)
fc_df = pd.read_csv(absolute_path_fc)
```

```{python}
parcel_proximity_acc = 'Assessor_-_Parcel_Proximity_20241121(acc).csv'
absolute_path_acc = os.path.join(path, parcel_proximity_acc)
acc_df = pd.read_csv(absolute_path_acc)
```

```{python}
parcel_sale = 'Assessor_-_Parcel_Sales_20241121(00-23).csv'
absolute_path_ps = os.path.join(path, parcel_sale)
ps_df = pd.read_csv(absolute_path_ps)
```


```{python}
av_df.rename(columns={'tax_year': 'year'}, inplace=True)

merged_df = pd.merge(av_df, ps_df, on=['pin', 'year', 'neighborhood_code', 'township_code', 'class'], how='left')

print(merged_df.head())

```

```{python}
unmatched_df1 = av_df[~av_df.set_index(['pin', 'year']).index.isin(merged_df.set_index(['pin', 'year']).index)]
print(unmatched_df1)

unmatched_df2 = ps_df[~ps_df.set_index(['pin', 'year']).index.isin(merged_df.set_index(['pin', 'year']).index)]
print(unmatched_df2)
```

```{python}
clean_merged_df = merged_df.dropna(subset=['sale_price'])

clean_merged_df = clean_merged_df[merged_df['sale_price'] > 0]


print(clean_merged_df.head())
```


```{python}
# merged_df['pin'] = merged_df['pin'].astype(str).str[:10]

# merged_df['merged_year'] = merged_df['tax_year'].combine_first(merged_df['year'])

# merged_df.drop(columns=['tax_year', 'year'], inplace=True)


# print(merged_df.head())
```

```{python}
# pp_df.rename(columns={'pin10': 'pin'}, inplace=True)

# pp_df['pin'] = pp_df['pin'].astype(str)

# merged_df = pd.merge(merged_df, pp_df, on="pin", how="inner", suffixes=('_left', '_right'))

# print(merged_df.head())

```


```{python}
av_df['certified_tot'] = av_df['certified_tot'].str.replace(',', '').astype(float)

```

```{python}
agg_av = av_df.groupby('tax_year', as_index=False)['certified_tot'].sum()
```

```{python}
line_chart = alt.Chart(agg_av).mark_line().encode(
    x=alt.X('tax_year:O', title='Tax Year'),  
    y=alt.Y('certified_tot:Q', 
            title='Certified Total (in millions)',
            axis=alt.Axis(format='.1f',
                          title='Certified Total (millions)')
           ),
    tooltip=[alt.Tooltip('tax_year:O', title='Year'),
             alt.Tooltip('certified_tot', format=',', title='Certified Total')],
).transform_calculate(

    certified_tot='datum.certified_tot / 1000000000'
).properties(
    title="Property Value Fluctuation by Year",
    width=800,
    height=400
)

line_chart

```


```{python}
agg_ps = ps_df.groupby('year', as_index=False)['sale_price'].sum()

print(agg_ps.head())

```

```{python}
line_chart = alt.Chart(agg_ps).mark_line().encode(
    x=alt.X('year:O', title='Year'),  
    y=alt.Y('sale_price:Q', 
            title='Total Sales (in millions)',
            axis=alt.Axis(format='.1f')),  
    tooltip=[
        alt.Tooltip('year:O', title='Year'),
        alt.Tooltip('sale_price', format=',', title='Total Sales')
    ]
).transform_calculate(
    sale_price='datum.sale_price / 1000000000'
).properties(
    title='Property Sales Fluctuation by Year',
    width=800,
    height=400
)

line_chart

```

```{python}
average_sales_df = clean_merged_df.groupby('year', as_index=False)['sale_price'].mean()

average_sales_df.rename(columns={'sale_price': 'avg_sale_price'}, inplace=True)

print(average_sales_df.head())

assessed_value_df = clean_merged_df.groupby('year', as_index=False)['certified_tot'].sum()

print(assessed_value_df.head())

yearly_data = pd.merge(assessed_value_df, average_sales_df, on='year')

print(yearly_data.head())

yearly_data['proportion'] = yearly_data['certified_tot'] / yearly_data['avg_sale_price']

print(yearly_data)

```


```{python}
line_chart = alt.Chart(yearly_data).mark_line().encode(
    x=alt.X('year:O', title='Year'),
    y=alt.Y('proportion:Q', title='Proportion of Assessed Value to Avg Sold Value'),
    tooltip=['year', 'certified_tot', 'avg_sale_price', 'proportion']
).properties(
    title='Proportion of Assessed Value to Average Sold Value by Year',
    width=800,
    height=400
)

line_chart

```